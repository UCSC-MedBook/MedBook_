language: node_js
services:
  - docker
env:
  # Necessary if we're running a service manually instead of
  # using prodStart.sh or devStart.sh
  - MONGO_URL="mongodb://mongo:27017/MedBook"
install:
  # Build all containers
  - ./scripts/buildAll.sh
  # Start up mongo
  - docker-compose -f docker-compose-mongo.yml up -d
script:
  # Run Meteor app tests
  - docker ps
  - docker-compose -f docker-compose.yml -f docker-compose-test.yml run wrangler
  - docker ps
  - docker-compose -f docker-compose.yml -f docker-compose-test.yml run job-runner
  - docker ps
  - docker-compose -f docker-compose.yml -f docker-compose-test.yml run patient-care
  - docker ps
  ## Then, spin them up normally in daemon mode and confirm they run
  - docker-compose -f docker-compose.yml up -d
  - docker ps

# If all tests pass, push the images to docker hub
# https://docs.travis-ci.com/user/docker/
after_success:
  - if [ "$TRAVIS_BRANCH" == "master"  ] && [ "$TRAVIS_PULL_REQUEST" == "false" ]; then
    docker login -e="$DOCKER_EMAIL" -u="$DOCKER_USERNAME" -p="$DOCKER_PASSWORD";
    docker push $(grep medbook/patient-care docker-compose.yml | cut -d " " -f 6);
    docker push $(grep medbook/wrangler docker-compose.yml | cut -d " " -f 6);
    docker push $(grep medbook/job-runner docker-compose.yml | cut -d " " -f 6);
    docker push $(grep medbook/gateway docker-compose.yml | cut -d " " -f 6);
    fi
